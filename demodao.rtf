{\rtf1\ansi\ansicpg1251\deff0\nouicompat\deflang1049{\fonttbl{\f0\fnil Courier New;}{\f1\fnil\fcharset0 Calibri;}}
{\colortbl ;\red204\green120\blue50;\red169\green183\blue198;\red152\green118\blue170;\red106\green135\blue89;\red128\green128\blue128;\red187\green181\blue41;\red255\green198\blue109;\red104\green151\blue187;}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\box\brdrdash\brdrw0 \sa200\sl276\slmult1\cf1\f0\fs18\lang9 private \cf2 ConnectionPool \cf3 connectionPool \cf2 = ConnectionPool.\i getInstance\i0 ()\cf1 ;\line     private static final \cf2 String \cf3\i SQL_INSERT_MINI_USER\cf2\i0 =\cf4 "INSERT INTO users (login, password, email, address, phone, firstName, lastName, type) \cf1\\"\cf4  +\cf1\\n\cf4 " \cf2 +\line             \cf4 "                    \cf1\\"\cf4 VALUES (?, ?, ?, ?, ?, ?, ?, ?)"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_INSERT_USER \cf2\i0 =\line             \cf4 "INSERT INTO users (\cf3 login\cf4 , \cf3 password\cf4 , \cf3 email\cf4 , \cf3 address\cf4 , \cf3 phone\cf4 , \cf3 firstName\cf4 , \cf3 lastName\cf4 , \cf3 type\cf4 ) " \cf2 +\line                     \cf4 "VALUES (?, ?, ?, ?, ?, ?, ?, ?)"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_LIST_USER_ORDER_BY_ID \cf2\i0 =\line             \cf4 "SELECT users.\cf3 userId\cf4 , \cf3 login\cf4 , \cf3 password\cf4 , \cf3 email\cf4 , \cf3 address\cf4 , \cf3 phone\cf4 , \cf3 firstName\cf4 , \cf3 lastName\cf4 , typesOfUsers.\cf3 type\cf4  " \cf2 +\line                     \cf4 "FROM users INNER JOIN typesOfUsers ON users.\cf3 type\cf4  = typesOfUsers.\cf3 typeId\cf4  " \cf2 +\line                     \cf4 "ORDER BY users.\cf3 userId\cf4 "\cf1 ;\line     private static final \cf2 String \cf3\i SQL_FIND_USER_BY_ID \cf2\i0 =\line             \cf4 "SELECT users.userId, login, password, email, address, phone, firstName, lastName, typesOfUsers.type " \cf2 +\line                     \cf4 "FROM users INNER JOIN typesOfUsers ON users.type = typesOfUsers.typeId " \cf2 +\line                     \cf4 "WHERE users.userId = ?"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_UPDATE_USER \cf2\i0 =\line             \cf4 "UPDATE users SET \cf3 login\cf4  = ?, \cf3 password\cf4  = ?, \cf3 email\cf4  = ?, \cf3 address\cf4  = ?, \cf3 phone\cf4  = ?, \cf3 firstName\cf4  = ?, \cf3 lastName\cf4  = ?, typesOfUsers.type = ? " \cf2 +\line                     \cf4 "WHERE users.\cf3 userId\cf4  = ?"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_DELETE_USER \cf2\i0 =\line             \cf4 "DELETE FROM users WHERE users.\cf3 userId\cf4  = ?"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_FIND_USER_BY_LOGIN \cf2\i0 =\line             \cf4 "SELECT users.userId, login, password, email, address, phone, firstName, lastName, typesOfUsers.type " \cf2 +\line                     \cf4 "FROM users INNER JOIN typesOfUsers ON users.type = typesOfUsers.typeId " \cf2 +\line                     \cf4 "WHERE login = ?"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_FIND_USER_BY_EMAIL \cf2\i0 =\line             \cf4 "SELECT users.userId, login, password, email, address, phone, firstName, lastName, typesOfUsers.type " \cf2 +\line                     \cf4 "FROM users INNER JOIN typesOfUsers ON users.type = typesOfUsers.typeId " \cf2 +\line                     \cf4 "WHERE email = ?"\cf1 ;\line     private static final \cf2 String \cf3\i SQL_EXIST_LOGIN \cf2\i0 =\line             \cf4 "SELECT \cf3 userId\cf4  FROM users WHERE \cf3 login\cf4  = ?"\cf1 ;\line\cf5 //    private static final String SQL_INSERT_ROLE =\line //            "INSERT INTO typesOfUsers (type) VALUES (?)";\line\line     \cf6 @Override\line     \cf1 public void \cf7 create\cf2 (User entity) \cf1 throws \cf2 DAOException \{\line         Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(\cf3\i SQL_INSERT_USER\cf2\i0 )\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 1\cf1 , \cf2 entity.getLogin())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 2\cf1 , \cf2 entity.getPassword())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 3\cf1 , \cf2 entity.getEmail())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 4\cf1 , \cf2 entity.getAddress())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 5\cf1 , \cf2 entity.getPhone())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 6\cf1 , \cf2 entity.getFirstName())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 7\cf1 , \cf2 entity.getLastName())\cf1 ;\line             \cf2 preparedStatement.setInt(\cf8 8\cf1 , \cf2 entity.getType())\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line     \}\line\line     \cf6 @Override\line     \cf1 public \cf2 List<User> \cf7 findAll\cf2 () \cf1 throws \cf2 DAOException \{\line         List<User> userList = \cf1 new \cf2 ArrayList<>()\cf1 ;\line         \cf2 Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 Statement statement = connection.createStatement()\cf1 ;\line             \cf2 ResultSet resultSet = statement.executeQuery(\cf3\i SQL_LIST_USER_ORDER_BY_ID\cf2\i0 )\cf1 ;\line             while \cf2 (resultSet.next()) \{\line                 User user = \cf1 new \cf2 User()\cf1 ;\line                 \cf2 userList.add(\i parseResultSet\i0 (resultSet\cf1 , \cf2 user))\cf1 ;\line             \cf2\}\line         \} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line         \cf1 return \cf2 userList\cf1 ;\line     \cf2\}\line\line     \cf6 @Override\line     \cf1 public \cf2 User \cf7 findById\cf2 (Integer id) \cf1 throws \cf2 DAOException \{\line         \cf1 return \cf2 prepareIntegerStatement(\cf3\i SQL_FIND_USER_BY_ID\cf1\i0 , \cf2 id)\cf1 ;\line     \cf2\}\line\line     \cf6 @Override\line     \cf1 public void \cf7 update\cf2 (User entity) \cf1 throws \cf2 DAOException \{\line         Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(\cf3\i SQL_UPDATE_USER\cf2\i0 )\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 1\cf1 , \cf2 entity.getLogin())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 2\cf1 , \cf2 entity.getPassword())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 3\cf1 , \cf2 entity.getEmail())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 4\cf1 , \cf2 entity.getAddress())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 5\cf1 , \cf2 entity.getPhone())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 6\cf1 , \cf2 entity.getFirstName())\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 7\cf1 , \cf2 entity.getLastName())\cf1 ;\line             \cf2 preparedStatement.setInt(\cf8 8\cf1 , \cf2 entity.getType())\cf1 ;\line             \cf2 preparedStatement.setInt(\cf8 9\cf1 , \cf2 entity.getUserId())\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line     \}\line\line     \cf6 @Override\line     \cf1 public void \cf7 delete\cf2 (User entity) \cf1 throws \cf2 DAOException \{\line         Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(\cf3\i SQL_DELETE_USER\cf2\i0 )\cf1 ;\line             \cf2 preparedStatement.setInt(\cf8 1\cf1 , \cf2 entity.getUserId())\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line     \}\line\line     \cf6 @Override\line     \cf1 public \cf2 User \cf7 findByLogin\cf2 (String login) \cf1 throws \cf2 DAOException \{\line         \cf1 return \cf2 prepareStringStatement(\cf3\i SQL_FIND_USER_BY_LOGIN\cf1\i0 , \cf2 login)\cf1 ;\line     \cf2\}\line\line     \cf6 @Override\line     \cf1 public \cf2 User \cf7 findByEmail\cf2 (String email) \cf1 throws \cf2 DAOException \{\line         \cf1 return \cf2 prepareStringStatement(\cf3\i SQL_FIND_USER_BY_EMAIL\cf1\i0 , \cf2 email)\cf1 ;\line     \cf2\}\line\line     \cf6 @Override\line     \cf1 public boolean \cf7 existLogin\cf2 (String login) \cf1 throws \cf2 DAOException \{\line         \cf1 boolean \cf2 exist\cf1 ;\line         \cf2 Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(\cf3\i SQL_EXIST_LOGIN\cf2\i0 )\cf1 ;\line             \cf2 ResultSet resultSet = preparedStatement.executeQuery()\cf1 ;\line             \cf2 exist = resultSet.next()\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException()\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line         \cf1 return \cf2 exist\cf1 ;\line     \cf2\}\line\line     \cf1 private \cf2 User \cf7 prepareStringStatement\cf2 (String sql\cf1 , \cf2 String value) \cf1 throws \cf2 DAOException \{\line         User user = \cf1 new \cf2 User()\cf1 ;\line         \cf2 Connection connection = \cf1 null;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(sql)\cf1 ;\line             \cf2 preparedStatement.setString(\cf8 1\cf1 , \cf2 value)\cf1 ;\line             \cf2 ResultSet resultSet = preparedStatement.executeQuery()\cf1 ;\line             \cf2\i parseResultSet\i0 (resultSet\cf1 , \cf2 user)\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line         \cf1 return \cf2 user\cf1 ;\line     \cf2\}\line\line     \cf1 private \cf2 User \cf7 prepareIntegerStatement\cf2 (String sql\cf1 , \cf2 Integer value) \cf1 throws \cf2 DAOException \{\line         Connection connection = \cf1 null;\line         \cf2 User user = \cf1 new \cf2 User()\cf1 ;\line         try \cf2\{\line             connection = \cf3 connectionPool\cf2 .retrieveConnection()\cf1 ;\line             \cf2 PreparedStatement preparedStatement = connection.prepareStatement(sql)\cf1 ;\line             \cf2 preparedStatement.setInt(\cf8 1\cf1 , \cf2 value)\cf1 ;\line             \cf2 ResultSet resultSet = preparedStatement.executeQuery()\cf1 ;\line             \cf2\i parseResultSet\i0 (resultSet\cf1 , \cf2 user)\cf1 ;\line         \cf2\} \cf1 catch \cf2 (SQLException e) \{\line             \cf1 throw new \cf2 DAOException(e)\cf1 ;\line         \cf2\} \cf1 finally \cf2\{\line             \cf3 connectionPool\cf2 .putbackConnection(connection)\cf1 ;\line         \cf2\}\line         \cf1 return \cf2 user\cf1 ;\line     \cf2\}\line\line     \cf1 private static \cf2 User \cf7 parseResultSet\cf2 (ResultSet resultSet\cf1 , \cf2 User user) \cf1 throws \cf2 SQLException \{\line         user.setUserId(resultSet.getInt(\cf4 "userId"\cf2 ))\cf1 ;\line         \cf2 user.setLogin(resultSet.getString(\cf4 "login"\cf2 ))\cf1 ;\line         \cf2 user.setPassword(resultSet.getString(\cf4 "password"\cf2 ))\cf1 ;\line         \cf2 user.setEmail(resultSet.getString(\cf4 "email"\cf2 ))\cf1 ;\line         \cf2 user.setAddress(resultSet.getString(\cf4 "address"\cf2 ))\cf1 ;\line         \cf2 user.setPhone(resultSet.getString(\cf4 "phone"\cf2 ))\cf1 ;\line         \cf2 user.setFirstName(resultSet.getString(\cf4 "firstName"\cf2 ))\cf1 ;\line         \cf2 user.setLastName(resultSet.getString(\cf4 "lastName"\cf2 ))\cf1 ;\line         \cf2 user.setType(resultSet.getInt(\cf4 "type"\cf2 ))\cf1 ;\line         return \cf2 user\cf1 ;\line     \cf2\}\par

\pard\sa200\sl276\slmult1\cf0\f1\fs22\par
}
 